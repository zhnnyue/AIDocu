/**
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/SplitPptxPresentationResult'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./SplitPptxPresentationResult'));
  } else {
    // Browser globals (root is window)
    if (!root.CloudmersiveConvertApiClient) {
      root.CloudmersiveConvertApiClient = {};
    }
    root.CloudmersiveConvertApiClient.JobStatusResult = factory(root.CloudmersiveConvertApiClient.ApiClient, root.CloudmersiveConvertApiClient.SplitPptxPresentationResult);
  }
}(this, function(ApiClient, SplitPptxPresentationResult) {
  'use strict';




  /**
   * The JobStatusResult model module.
   * @module model/JobStatusResult
   * @version 2.8.0
   */

  /**
   * Constructs a new <code>JobStatusResult</code>.
   * Result of performing a batch job operation
   * @alias module:model/JobStatusResult
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>JobStatusResult</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/JobStatusResult} obj Optional instance to populate.
   * @return {module:model/JobStatusResult} The populated <code>JobStatusResult</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('Successful')) {
        obj['Successful'] = ApiClient.convertToType(data['Successful'], 'Boolean');
      }
      if (data.hasOwnProperty('AsyncJobStatus')) {
        obj['AsyncJobStatus'] = ApiClient.convertToType(data['AsyncJobStatus'], 'String');
      }
      if (data.hasOwnProperty('AsyncJobID')) {
        obj['AsyncJobID'] = ApiClient.convertToType(data['AsyncJobID'], 'String');
      }
      if (data.hasOwnProperty('PptxResult')) {
        obj['PptxResult'] = SplitPptxPresentationResult.constructFromObject(data['PptxResult']);
      }
      if (data.hasOwnProperty('ErrorMessage')) {
        obj['ErrorMessage'] = ApiClient.convertToType(data['ErrorMessage'], 'String');
      }
    }
    return obj;
  }

  /**
   * True if the operation to check the status of the job was successful, false otherwise
   * @member {Boolean} Successful
   */
  exports.prototype['Successful'] = undefined;
  /**
   * Returns the job status of the Async Job, if applicable.  Possible states are STARTED and COMPLETED
   * @member {String} AsyncJobStatus
   */
  exports.prototype['AsyncJobStatus'] = undefined;
  /**
   * When the job exceeds 25 pages, an Async Job ID is returned.  Use the CheckPdfOcrJobStatus API to check on the status of this job using the AsyncJobID and get the result when it finishes
   * @member {String} AsyncJobID
   */
  exports.prototype['AsyncJobID'] = undefined;
  /**
   * PowerPoint split result (if applicable)
   * @member {module:model/SplitPptxPresentationResult} PptxResult
   */
  exports.prototype['PptxResult'] = undefined;
  /**
   * Error message (if any)
   * @member {String} ErrorMessage
   */
  exports.prototype['ErrorMessage'] = undefined;



  return exports;
}));


